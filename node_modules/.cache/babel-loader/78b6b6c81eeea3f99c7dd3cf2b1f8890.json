{"ast":null,"code":"var _jsxFileName = \"/Users/imac/React/tictactoes/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ButtonRestart from './ButtonRestart';\nconst initialGame = [[null, null, null], [null, null, null], [null, null, null]];\nconst initialGame2 = [[null, null, null], [null, null, null], [null, null, null]];\n\nconst isFirstPlayerTurn = game => {\n  const emptyCells = game.reduce((acc, row) => acc.concat(row), []).filter(cell => cell === null);\n  return emptyCells.length % 2 !== 0;\n};\n\nconst getWinner = game => {\n  const getOwner = line => line.every(cell => cell === line[0]) ? line[0] : null;\n\n  const columns = game.map((_, y) => game.map((_, x) => game[x][y]));\n  const diagonals = [game.map((_, y) => game[y][y]), game.map((_, y) => game[y][2 - y])];\n  const lines = [...game, ...columns, ...diagonals];\n  return lines.reduce((winner, line) => winner || getOwner(line), null);\n};\n\nconst play = (game, x, y) => {\n  if (!getWinner(game) && !game[x][y]) {\n    game[x][y] = isFirstPlayerTurn(game) ? 1 : 2;\n    createGame(initialGame);\n    ReactDOM.render(createGame(initialGame), document.getElementById('root'));\n  }\n}; //Le boutton reset ne fonction pas\n\n\nfunction createGame(game) {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(App, {\n    onClick: () => {},\n    appGame: game,\n    winner: getWinner(game),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(ButtonRestart, {\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n}\n\nReactDOM.render(createGame(initialGame), document.getElementById('root'));\nexport const constTicTacToes = {\n  initialGame,\n  play,\n  getWinner,\n  createGame,\n  initialGame2\n}; //export default createGame; \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/imac/React/tictactoes/src/index.tsx"],"names":["React","ReactDOM","App","serviceWorker","ButtonRestart","initialGame","initialGame2","isFirstPlayerTurn","game","emptyCells","reduce","acc","row","concat","filter","cell","length","getWinner","getOwner","line","every","columns","map","_","y","x","diagonals","lines","winner","play","createGame","render","document","getElementById","constTicTacToes","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ButtonRestart from './ButtonRestart'\n\n\ntype Cell = 1 | 2 | null;\ntype Winner = Cell\ntype Owner = Cell\ntype Row = Cell[];\ntype Line = Row;\ntype Game = Row[];\n\nconst initialGame: Game = [\n    [null, null, null],\n    [null, null, null],\n    [null, null, null],\n];\n\nconst initialGame2: Game = [\n    [null, null, null],\n    [null, null, null],\n    [null, null, null],\n];\n\nconst isFirstPlayerTurn = (game: Game): boolean => {\n    const emptyCells = game\n        .reduce<Cell[]>((acc, row) => acc.concat(row), [])\n        .filter(cell => cell === null);\n\n    return emptyCells.length % 2 !== 0;\n};\n\nconst getWinner = (game: Game): Winner => {\n    const getOwner = (line: Line): Owner =>\n    line.every(cell => cell === line[0]) ? line[0] : null;\n\n    const columns = game.map((_, y) => game.map((_, x) => game[x][y]));\n    const diagonals = [\n    game.map((_, y) => game[y][y]),\n    game.map((_, y) => game[y][2 - y])\n    ];\n    const lines = [...game, ...columns, ...diagonals];\n\n    return lines.reduce<Owner>((winner, line) => winner || getOwner(line), null);\n};\n\nconst play = (game: Game, x: number, y: number) => {\n    if (!getWinner(game) && !game[x][y]) {\n    game[x][y] = isFirstPlayerTurn(game) ? 1 : 2;\n    createGame(initialGame)\n    ReactDOM.render(createGame(initialGame), document.getElementById('root'));\n    }\n};\n\n//Le boutton reset ne fonction pas\nfunction createGame(game: Game) {\n    return(\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <App onClick={() => {}} appGame={game} winner={getWinner(game)}/>\n                <ButtonRestart onClick={() => {}}/>\n            </header>\n        </div>\n    );\n    \n}\n\nReactDOM.render(createGame(initialGame), document.getElementById('root'));\n\n\nexport const constTicTacToes = {\n    initialGame,\n    play,\n    getWinner,\n    createGame,\n    initialGame2,\n}\n\n//export default createGame; \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}