{"ast":null,"code":"import _slicedToArray from \"/Users/lpiem/react/tictactoes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lpiem/react/tictactoes/src/App.tsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport TFoot from \"./TFoot\";\nimport ButtonRestart from './ButtonRestart';\nimport { getWinner, initialGame, play } from './game_logique';\n\nconst Game = () => {\n  const _React$useState = React.useState(initialGame),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        game = _React$useState2[0],\n        setGame = _React$useState2[1]; //setGame(game)\n\n\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, game.map((row, index) => React.createElement(Row, {\n    key: index,\n    row: row,\n    onCellClick: y => play(game, index, y),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))), React.createElement(TFoot, {\n    winner: getWinner(game),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Game, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(ButtonRestart, {\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/lpiem/react/tictactoes/src/App.tsx"],"names":["React","Row","TFoot","ButtonRestart","getWinner","initialGame","play","Game","useState","game","setGame","map","row","index","y","App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,IAAjC,QAA6C,gBAA7C;;AASA,MAAMC,IAAyB,GAAG,MAAM;AAAA,0BACdP,KAAK,CAACQ,QAAN,CAAeH,WAAf,CADc;AAAA;AAAA,QAC/BI,IAD+B;AAAA,QACzBC,OADyB,wBAEtC;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KACR,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,GAAG,EAAED,GAAtB;AAA2B,IAAA,WAAW,EAAGE,CAAD,IAAeR,IAAI,CAACG,IAAD,EAAOI,KAAP,EAAcC,CAAd,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,EAME,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEV,SAAS,CAACK,IAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAbD;;AAeA,MAAMM,GAAa,GAAG,MAAM;AACxB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE,MAAM,CAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADN,CADF;AAQH,CATD;;AAWA,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Row, { RowProps } from \"./Row\";\nimport TFoot from \"./TFoot\";\nimport ButtonRestart from './ButtonRestart'\n\nimport { getWinner, initialGame, play } from './game_logique'\n\n\n\ntype GameProps = {\n  //myGame: RowProps[\"row\"][];\n  //RowClick: (x: number, y: number) => void;\n};\n\nconst Game: React.FC<GameProps> = () => {\n  const [game, setGame] = React.useState(initialGame);\n  //setGame(game)\n  return (\n    <table>\n      <tbody>\n        {game.map((row, index) => (\n          <Row key={index} row={row} onCellClick={(y: number) => play(game, index, y)}/>\n        ))}\n      </tbody>\n      <TFoot winner={getWinner(game)}/>\n    </table>\n  );\n};\n\nconst App: React.FC = () => {\n    return (\n      <div className=\"App\">\n            <header className=\"App-header\">\n                <Game/>\n                <ButtonRestart onClick={() => {}}/>\n            </header>\n        </div>    \n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}